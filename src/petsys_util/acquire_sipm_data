#!/usr/bin/env python
# -*- coding: utf-8 -*-

from petsys import daqd, config
from copy import deepcopy
import argparse

parser = argparse.ArgumentParser(description='Acquire data for TDC calibration')
parser.add_argument("--config", type=str, required=True, help="Configuration file")
parser.add_argument("-o", type=str, dest="fileNamePrefix", required=True, help="Data filename (prefix)")
parser.add_argument("--time", type=float, required=True, help="Acquisition time (in seconds)")
args = parser.parse_args()

systemConfig = config.ConfigFromFile(args.config)

daqd = daqd.Connection()
daqd.initializeSystem()
systemConfig.loadToHardware(daqd, config.APPLY_BIAS_ON)

asicsConfig = daqd.getAsicsConfig()
for ac in asicsConfig.values():
	gc = ac.globalConfig
	for cc in ac.channelConfig:
		cc.setValue("trigger_mode_1", 0b00)

		cc.setValue("qdc_mode", 0)
		#cc.setValue("intg_en", 1)
		#cc.setValue("intg_signal_en", 1)
		#cc.setValue("min_intg_time", 350/5/4)
		#cc.setValue("max_intg_time", 350/5/4)

		cc.setValue("trigger_mode_2_t", 0b01)
		cc.setValue("trigger_mode_2_e", 0b001)
		cc.setValue("trigger_mode_2_q", 0b01)
		cc.setValue("trigger_mode_2_b", 0b11)

		cc.setValue("vth_t1", 45)
		cc.setValue("vth_t2", 30)
		cc.setValue("vth_e", 20)
		

for ac in asicsConfig.values():
	for cc in ac.channelConfig:
		cc.setValue("trigger_mode_1", 0b11)

asicsConfig[(0,0,0)].channelConfig[44].setValue("trigger_mode_1", 0b00)
asicsConfig[(0,0,2)].channelConfig[33].setValue("trigger_mode_1", 0b00)

#for ac in asicsConfig.values():
	#ac.globalConfig.setValue("debug_mode", 1)
        #ac.globalConfig.setValue("adebug_out_mode", 0b01)
        #ac.channelConfig[63].setValue("ch63_obuf_msb", 0)
        #ac.channelConfig[63].setValue("debug_mode", 3)
	#ac.channelConfig[63].setValue("debug_mode", 0b01)
	#ac.channelConfig[63].setValue("vth_T1", 50)

	
daqd.setAsicsConfig(asicsConfig)

daqd.openRawAcquisition(args.fileNamePrefix)
daqd.acquire(args.time, 0, 0);

systemConfig.loadToHardware(daqd, config.APPLY_BIAS_OFF)
